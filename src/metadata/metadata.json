{
  "package": "HyperTrack",
  "tagline": "Location traking as a service",
  "description": "HyperTrack lets you build location features, without worrying about infrastructure.",
  "image": "https://logo.clearbit.com/hypertrack.io?s=128",
  "repo": "https://github.com/RapidSoftwareSolutions/Marketplace-HyperTrack-package",
  "keywords": [
    "API", "traking", "HyperTrack"
  ],
  "accounts": {
    "domain": "hypertrack.io",
    "credentials": [
      "APIkey"
    ]
  },
  "blocks": [
    {
      "name": "createDriver",
      "description": "Create and return a Driver object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "vehicleType",
          "type": "String",
          "info": "The default vehicle type of the driver. Must be one of 'walking, bicycle, motorcycle, car, 3-wheeler, van, flight, train, ship'.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Name of the driver.",
          "required": false
        },
        {
          "name": "phone",
          "type": "String",
          "info": "E164 formatted phone number of the driver.",
          "required": false
        },
        {
          "name": "photo",
          "type": "File",
          "info": "A photo file of the driver.",
          "required": false
        },
        {
          "name": "lookupId",
          "type": "String",
          "info": "A unique id that you can add to the driver to search.",
          "required": false
        },
        {
          "name": "fleetId",
          "type": "String",
          "info": "The identifier of the fleet to which the driver belongs.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleDriver",
      "description": "Retrieves a driver object with the id.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Valid driver identifier",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateDriver",
      "description": "Edit an existing driver object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Valid driver identifier.",
          "required": true
        },
        {
          "name": "vehicleType",
          "type": "String",
          "info": "The default vehicle type of the driver. Must be one of 'walking, bicycle, motorcycle, car, 3-wheeler, van, flight, train, ship'.",
          "required": false
        },
        {
          "name": "name",
          "type": "String",
          "info": "Name of the driver.",
          "required": false
        },
        {
          "name": "phone",
          "type": "String",
          "info": "E164 formatted phone number of the driver.",
          "required": false
        },
        {
          "name": "photo",
          "type": "File",
          "info": "A photo file of the driver.",
          "required": false
        },
        {
          "name": "lookupId",
          "type": "String",
          "info": "A unique id that you can add to the driver to search",
          "required": false
        },
        {
          "name": "fleetId",
          "type": "String",
          "info": "The identifier of the fleet to which the driver belongs.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteDriver",
      "description": "Delete an existing customer object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Valid driver identifier",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getDrivers",
      "description": "List all driver objects. The list can be filtered using the following parameters.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "pageSize",
          "type": "Number",
          "info": "Maximum number of objects to return, default is 50.",
          "required": false
        },
        {
          "name": "name",
          "type": "String",
          "info": "Filter drivers with names that contain this string.",
          "required": false
        },
        {
          "name": "id",
          "type": "String",
          "info": "Filter drivers with a comma separated list of ids.",
          "required": false
        },
        {
          "name": "fleetId",
          "type": "String",
          "info": "Filter driver objects by fleet.",
          "required": false
        },
        {
          "name": "bbox",
          "type": "String",
          "info": "Filter driver objects by bounding box, specified as max_lng,max_lat,min_lng,min_lat.",
          "required": false
        },
        {
          "name": "minDate",
          "type": "String",
          "info": "Filter objects by minimum created at date.",
          "required": false
        },
        {
          "name": "maxDate",
          "type": "String",
          "info": "Filter objects by maximum created at date.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getDrivers",
      "description": "Retrieves the overview of an existing driver's performance. Supply the unique identifier that was returned on driver creation.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "minDate",
          "type": "String",
          "info": "Minimum date as ISO datetime string to get statistics for a driver.",
          "required": false
        },
        {
          "name": "maxDate",
          "type": "String",
          "info": "Maximum date as ISO datetime string to get statistics for a driver.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getDriversLocations",
      "description": "Returns a minimal list of your drivers with location to display on a map.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "minDate",
          "type": "String",
          "info": "Minimum created date as ISO datetime string to filter drivers.",
          "required": false
        },
        {
          "name": "maxDate",
          "type": "String",
          "info": "Maximum created date as ISO datetime string to filter drivers.",
          "required": false
        },
        {
          "name": "fleetId",
          "type": "String",
          "info": "Filter only drivers of a particular fleet.",
          "required": false
        },
        {
          "name": "pageSize",
          "type": "Number",
          "info": "The number of entries to return in a page (maximum of 200).",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "assignTaskToDriver",
      "description": "This API will assign a list of Tasks to a Driver. We recommend using this after you have created tasks and want to start tracking them. If driver is on a Trip when the call is made, we add these tasks to the currently running Trip, else we create a new Trip and start tracking it for you. When all tasks are marked completed, we end the Trip and stop tracking.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Valid driver identifier",
          "required": true
        },
        {
          "name": "taskIds",
          "type": "String",
          "info": "List of task ids to be assigned to the driver.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "endTripForDriver",
      "description": "This API will end the live trip for a Driver.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Valid driver identifier",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "endShiftForDriver",
      "description": "This API will end the live shift for a Driver.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Valid driver identifier",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTrip",
      "description": "Creates a new trip object. By default, it also starts the trip.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "The id of the driver who will be on trip. If not specified, a new driver will be created for the purpose of the trip.",
          "required": false
        },
        {
          "name": "startLocation",
          "type": "String",
          "info": "The start location of the trip.",
          "required": false
        },
        {
          "name": "tasks",
          "type": "Array",
          "info": "The array of task ids to be performed on the trip, in format [\"b2249ba8-e88c-455e-b02f-672677828ddc\"].",
          "required": false
        },
        {
          "name": "vehicleType",
          "type": "String",
          "info": "The vehicle type to be used in the trip. If not specified, this defaults to vehicle type of driver. Possible types are walking, bicycle, motorcycle, car, 3-wheeler, van.",
          "required": false
        },
        {
          "name": "hasOrderedTasks",
          "type": "Boolean",
          "info": "Set true to indicate the tasks have a pre-defined sequence as specified in tasks. Default is false.",
          "required": false
        },
        {
          "name": "isAutoEnded",
          "type": "Boolean",
          "info": "Set false if the trip should not end after the last task is completed. Default is true, and the trip ends after the last task is completed.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "endTrip",
      "description": "Ends a live trip by trip id.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "tripId",
          "type": "String",
          "info": "Valid trip identifier.",
          "required": true
        },
        {
          "name": "endLocation",
          "type": "String",
          "info": "Location where the trip ends.",
          "required": false
        },
        {
          "name": "endTime",
          "type": "String",
          "info": "Time at which the trip ends, defaults to current time.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTrip",
      "description": "Retrieves a trip object with the id.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "tripId",
          "type": "String",
          "info": "Valid trip identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteTrip",
      "description": "Delete an existing trip object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "tripId",
          "type": "String",
          "info": "Valid trip identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTrips",
      "description": "List all trip objects. The list can be filtered using the following parameters.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "pageSize",
          "type": "Number",
          "info": "Maximum number of objects to return, default is 50.",
          "required": false
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Filter trips for a particular driver id.",
          "required": false
        },
        {
          "name": "id",
          "type": "String",
          "info": "Filter trips with a comma separated list of ids.",
          "required": false
        },
        {
          "name": "status",
          "type": "String",
          "info": "Filter trips for a particular status, can be one of live, ended, suspended.",
          "required": false
        },
        {
          "name": "minDate",
          "type": "String",
          "info": "Filter objects by minimum created at date.",
          "required": false
        },
        {
          "name": "maxDate",
          "type": "String",
          "info": "Filter objects by maximum created at date.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "addTaskToTrip",
      "description": "This API lets you add Tasks to a live Trip. Only tasks that have not been completed can be added to a Trip.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "tripId",
          "type": "String",
          "info": "Valid trip identifier.",
          "required": true
        },
        {
          "name": "taskId",
          "type": "String",
          "info": "The id of the task to be added.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "removeTaskFromTrip",
      "description": "This API lets you remove Tasks to a live Trip. Only tasks that are on the Trip and have not been completed can be removed.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "tripId",
          "type": "String",
          "info": "Valid trip identifier.",
          "required": true
        },
        {
          "name": "taskId",
          "type": "String",
          "info": "The id of the task to be added.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "changeTripTasksSequence",
      "description": "This API lets you reorder Tasks of a live Trip. This can only be done for Trips that have has_ordered_tasks as true.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "tripId",
          "type": "String",
          "info": "Valid trip identifier.",
          "required": true
        },
        {
          "name": "taskOrder",
          "type": "Array",
          "info": "Array of task ids in the new sequence. Must have all ids of tasks on the trip, in format [\"3a36b6df-a7e7-40d0-86b7-b5aae1ce3a2b\", \"77b9a3fa-a3ab-4840-aadb-cd33442ca45b\"]",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTask",
      "description": "Creates a new task object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "destinationId",
          "type": "String",
          "info": "The id of the destination where the task will be performed.",
          "required": false
        },
        {
          "name": "action",
          "type": "String",
          "info": "The action of the task, possible values are pickup, delivery, visit or task. Defaults to task.",
          "required": false
        },
        {
          "name": "orderId",
          "type": "String",
          "info": "An id that you can specify based on your internal ids.",
          "required": false
        },
        {
          "name": "committedEta",
          "type": "String",
          "info": "The eta commitment made to the customer to measure on-time performance, in format \"2000-01-01T12:00:00.00Z\".",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTaskWithNewDestination",
      "description": "Creates a new task object with creating new destination.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "customerId",
          "type": "String",
          "info": "The id of the customer to which this destination belongs.",
          "required": false
        },
        {
          "name": "address",
          "type": "String",
          "info": "Street address of the destination.",
          "required": false
        },
        {
          "name": "landmark",
          "type": "String",
          "info": "Landmark near destination.",
          "required": false
        },
        {
          "name": "zipCode",
          "type": "String",
          "info": "Zip or postal code of the destination.",
          "required": false
        },
        {
          "name": "city",
          "type": "String",
          "info": "City of the destination.",
          "required": false
        },
        {
          "name": "state",
          "type": "String",
          "info": "State of the destination.",
          "required": false
        },
        {
          "name": "country",
          "type": "String",
          "info": "Country of the destination.",
          "required": false
        },
        {
          "name": "locationLatitude",
          "type": "String",
          "info": "Location latitude of the destination.",
          "required": false
        },
        {
          "name": "locationLongitude",
          "type": "String",
          "info": "Location longitude of the destination.",
          "required": false
        },
        {
          "name": "action",
          "type": "String",
          "info": "The action of the task, possible values are pickup, delivery, visit or task. Defaults to task.",
          "required": false
        },
        {
          "name": "orderId",
          "type": "String",
          "info": "An id that you can specify based on your internal ids.",
          "required": false
        },
        {
          "name": "committedEta",
          "type": "String",
          "info": "The eta commitment made to the customer to measure on-time performance, in format \"2000-01-01T12:00:00.00Z\".",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "completeTask",
      "description": "Completes a Task.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "taskId",
          "type": "String",
          "info": "Valid task identifier.",
          "required": true
        },
        {
          "name": "completionTime",
          "type": "Number",
          "info": "Timestamp when task is completed, default to current time.",
          "required": false
        },
        {
          "name": "completionLocation",
          "type": "String",
          "info": "Location at which task is completed.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "cancelTask",
      "description": "Cancels a Task. Canceled tasks cannot be restarted, removed or completed.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "taskId",
          "type": "String",
          "info": "Valid task identifier.",
          "required": true
        },
        {
          "name": "cancelationTime",
          "type": "Number",
          "info": "Timestamp when task is canceled, default to current time.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTask",
      "description": "Retrieves a task object with the id.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "taskId",
          "type": "String",
          "info": "Valid task identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateDestinationLocation",
      "description": "Edit an existing destination object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "destinationId",
          "type": "String",
          "info": "Valid destination identifier.",
          "required": true
        },
        {
          "name": "customerId",
          "type": "String",
          "info": "The id of the customer to which this destination belongs.",
          "required": false
        },
        {
          "name": "address",
          "type": "String",
          "info": "Street address of the destination.",
          "required": false
        },
        {
          "name": "landmark",
          "type": "String",
          "info": "Landmark near destination.",
          "required": false
        },
        {
          "name": "zipCode",
          "type": "String",
          "info": "Zip or postal code of the destination.",
          "required": false
        },
        {
          "name": "city",
          "type": "String",
          "info": "City of the destination.",
          "required": false
        },
        {
          "name": "state",
          "type": "String",
          "info": "State of the destination.",
          "required": false
        },
        {
          "name": "country",
          "type": "String",
          "info": "Country of the destination.",
          "required": false
        },
        {
          "name": "locationLatitude",
          "type": "String",
          "info": "Location latitude of the destination.",
          "required": false
        },
        {
          "name": "locationLongitude",
          "type": "String",
          "info": "Location longitude of the destination.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTasks",
      "description": "List all tasks objects. The list can be filtered using the following parameters.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "pageSize",
          "type": "Number",
          "info": "Maximum number of objects to return, default is 50.",
          "required": false
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "Filter tasks that are assigned to a driver.",
          "required": false
        },
        {
          "name": "orderId",
          "type": "String",
          "info": "Filter tasks by order id.",
          "required": false
        },
        {
          "name": "minDate",
          "type": "String",
          "info": "Filter objects by minimum created at date.",
          "required": false
        },
        {
          "name": "maxDate",
          "type": "String",
          "info": "Filter objects by maximum created at date.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteTask",
      "description": "Delete an existing task object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "taskId",
          "type": "String",
          "info": "Valid task identifier",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createShift",
      "description": "Creates a new shift object.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "driverId",
          "type": "String",
          "info": "The id of the driver on shift.",
          "required": true
        },
        {
          "name": "startLocation",
          "type": "String",
          "info": "Start location of the shift.",
          "required": false
        },
        {
          "name": "startedAt",
          "type": "String",
          "info": "Start time of the shift, default is current time.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleShift",
      "description": "Retrieves a shift object with the id.",
      "args": [
        {
          "name": "apiKey",
          "type": "credentials",
          "info": "API key.",
          "required": true
        },
        {
          "name": "shiftId",
          "type": "String",
          "info": "Valid shift identifier",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    }
  ]
}